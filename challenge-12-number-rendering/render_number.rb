DIGIT_MAP = {
  0 => [[" ", "_", " "], ["|", " ", "|"], ["|", "_", "|"]],
  1 => [[" ", " ", " "], [" ", " ", "|"], [" ", " ", "|"]],
  2 => [[" ", "_", " "], [" ", "_", "|"], ["|", "_", " "]],
  3 => [[" ", "_", " "], [" ", "_", "|"], [" ", "_", "|"]],
  4 => [[" ", " ", " "], ["|", "_", "|"], [" ", " ", "|"]],
  5 => [[" ", "_", " "], ["|", "_", " "], [" ", "_", "|"]],
  6 => [[" ", "_", " "], ["|", "_", " "], ["|", "_", "|"]],
  7 => [[" ", "_", " "], [" ", " ", "|"], [" ", " ", "|"]],
  8 => [[" ", "_", " "], ["|", "_", "|"], ["|", "_", "|"]],
  9 => [[" ", "_", " "], ["|", "_", "|"], [" ", "_", "|"]],
}

if ARGV.length < 1
  puts "An integer argument is required"
  return
end

digit_arrays = ARGV[0].to_s.chars.map { |d| DIGIT_MAP[d.to_i] }

rows_to_print = []
for i in 0..3
  rows_to_print.push(digit_arrays.map { |d| d[i] }.flatten.reduce("") { |acc, cur| acc + cur.to_s })
end

puts rows_to_print
